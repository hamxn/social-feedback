rule CitizenOpenComplaint {
  description:  "CItizen has perment open complaint"
  participant: "org.healthsystem.Citizen"
  operation: CREATE  
  resource: "org.healthsystem.Complaint"
  transaction: "org.healthsystem.OpenComplaint"
  action: ALLOW
}

rule CitizenReadTheCompaintOwner {
  description:  "Citizen has permit read the compaint which their is owner"
  participant: "org.healthsystem.Citizen"
  operation: READ
  resource: "org.healthsystem.Complaint"
  condition: (v.owner.getIdentifier() == m.getIdentifier())
  action: ALLOW
}

rule CitizenReadAllCompaintStatusDone {
  description:  "Citizen has permit read all the compaint has status done"
  participant: "org.healthsystem.Citizen"
  operation: READ
  resource: "org.healthsystem.Complaint"
  condition: (v.status == ComplaintStatus.DONE)
  action: ALLOW
}

rule MinistryReadAllIssue {
  description:  "The ministry of Health has permit read all complaint in blockchain network"
  participant: "org.healthsystem.MinistryOfHealth"
  operation: READ
  resource: "org.healthsystem.Complaint"
  action: ALLOW
}


rule DeparmentOfHealthChangeStatusComplaint {
  description:  "System ACL to permit all access"
  participant: "org.healthsystem.DepartmentOfHealth"
  operation: READ, UPDATE
  resource: "org.healthsystem.Complaint"
  action: ALLOW
}



rule NetworkAdminUser {
  description: "Grant business network administrators full access to user resources"
  participant: "org.hyperledger.composer.system.NetworkAdmin"
  operation: ALL
  resource: "**"
  action: ALLOW
}


rule NetworkAdminSystem {
  description: "Grant business network administrators full access to system resources"
  participant: "org.hyperledger.composer.system.NetworkAdmin"
  operation: ALL
  resource: "org.hyperledger.composer.system.**"
  action: ALLOW
}